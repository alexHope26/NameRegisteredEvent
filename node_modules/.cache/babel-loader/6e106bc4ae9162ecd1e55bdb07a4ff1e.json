{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar abstract_coder_1 = require(\"./abstract-coder\"); // Clones the functionality of an existing Coder, but without a localName\n\n\nvar AnonymousCoder =\n/** @class */\nfunction (_super) {\n  __extends(AnonymousCoder, _super);\n\n  function AnonymousCoder(coder) {\n    var _this = _super.call(this, coder.name, coder.type, undefined, coder.dynamic) || this;\n\n    _this.coder = coder;\n    return _this;\n  }\n\n  AnonymousCoder.prototype.encode = function (writer, value) {\n    return this.coder.encode(writer, value);\n  };\n\n  AnonymousCoder.prototype.decode = function (reader) {\n    return this.coder.decode(reader);\n  };\n\n  return AnonymousCoder;\n}(abstract_coder_1.Coder);\n\nexports.AnonymousCoder = AnonymousCoder;","map":null,"metadata":{},"sourceType":"script"}