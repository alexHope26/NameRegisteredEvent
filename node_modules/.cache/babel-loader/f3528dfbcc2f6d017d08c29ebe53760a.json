{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bytes_1 = require(\"@ethersproject/bytes\");\n\nvar strings_1 = require(\"@ethersproject/strings\");\n\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\n\nvar logger_1 = require(\"@ethersproject/logger\");\n\nvar _version_1 = require(\"./_version\");\n\nvar logger = new logger_1.Logger(_version_1.version); ///////////////////////////////\n\nvar Zeros = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nvar Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\n\nfunction isValidName(name) {\n  try {\n    var comps = name.split(\".\");\n\n    for (var i = 0; i < comps.length; i++) {\n      if (strings_1.nameprep(comps[i]).length === 0) {\n        throw new Error(\"empty\");\n      }\n    }\n\n    return true;\n  } catch (error) {}\n\n  return false;\n}\n\nexports.isValidName = isValidName;\n\nfunction namehash(name) {\n  if (typeof name !== \"string\") {\n    logger.throwArgumentError(\"invalid address - \" + String(name), \"name\", name);\n  }\n\n  var result = Zeros;\n\n  while (name.length) {\n    var partition = name.match(Partition);\n    var label = strings_1.toUtf8Bytes(strings_1.nameprep(partition[3]));\n    result = keccak256_1.keccak256(bytes_1.concat([result, keccak256_1.keccak256(label)]));\n    name = partition[2] || \"\";\n  }\n\n  return bytes_1.hexlify(result);\n}\n\nexports.namehash = namehash;\n\nfunction id(text) {\n  return keccak256_1.keccak256(strings_1.toUtf8Bytes(text));\n}\n\nexports.id = id;\nexports.messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n\nfunction hashMessage(message) {\n  if (typeof message === \"string\") {\n    message = strings_1.toUtf8Bytes(message);\n  }\n\n  return keccak256_1.keccak256(bytes_1.concat([strings_1.toUtf8Bytes(exports.messagePrefix), strings_1.toUtf8Bytes(String(message.length)), message]));\n}\n\nexports.hashMessage = hashMessage;","map":null,"metadata":{},"sourceType":"script"}