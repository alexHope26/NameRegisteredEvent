{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * simple API for IPFS\n */\n\nclass IpfsAPI {\n  constructor(_client) {\n    this.client = _client;\n  }\n  /**\n   * retrieves the conent for a hash from IPFS.\n   * @param hash  the IPFS-hash to fetch\n   * @param resultEncoding the internal encoding to use\n   *\n   */\n\n\n  get(hash, resultEncoding) {\n    return this.client.sendRPC('ipfs_get', [hash, resultEncoding || 'base64'], '0x7d0').then(response => response.result ? Buffer.from(response.result, resultEncoding || 'base64') : Promise.reject(new Error(response.error || 'Hash not found')));\n  }\n  /**\n   * stores the data on ipfs and returns the IPFS-Hash.\n   * @param data puts a IPFS content\n   * @param dataEncoding\n   */\n\n\n  put(data, dataEncoding) {\n    return this.client.sendRPC('ipfs_put', [data.toString(dataEncoding || 'base64'), dataEncoding || 'base64'], '0x7d0').then(response => response.result ? response.result : Promise.reject(new Error(response.error || 'Hash not found')));\n  }\n\n}\n\nexports.default = IpfsAPI;","map":null,"metadata":{},"sourceType":"script"}